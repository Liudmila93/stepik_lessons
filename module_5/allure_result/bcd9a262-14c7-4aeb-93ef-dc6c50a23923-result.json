{"name": "test_guest_can_add_product_to_basket[offer7]", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: Message with book name is wrong", "trace": "self = <module_5.test_product_page.TestProductPage object at 0x0000017EC264DDF0>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"afd1f714a0eced45c9cfd8d098ced6d9\")>\npromo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                              [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\",\n                               pytest.param(\"offer7\", marks=pytest.mark.xfail), \"offer8\",\n                               \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        link = f\"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo={promo_offer}\"\n        page = ProductPage(browser, link)  # инициализируем Page Object, передаем в конструктор экземпляр драйвера и url\n        page.open()  # открываем страницу\n        page.add_item_to_basket()  # выполняем метод страницы - нажимаем на кнопку добавления в корзину\n        page.solve_quiz_and_get_code()\n>       page.should_show_info_in_the_cart()  # проверяем страницу логина\n\nmodule_5\\test_product_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodule_5\\pages\\product_page.py:11: in should_show_info_in_the_cart\n    self.should_be_message_about_item()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x0000017EC26F4A90>\n\n    def should_be_message_about_item(self):\n        cart_text = self.browser.find_element(*ProductPageLocators.CART_MESSAGE_WITH_BOOK_NAME).text\n        book_name = self.browser.find_element(*ProductPageLocators.BOOK_NAME).text\n        whole_text = book_name + \" has been added to your basket.\"\n>       assert whole_text == cart_text, \"Message with book name is wrong\"\nE       AssertionError: Message with book name is wrong\n\nmodule_5\\pages\\product_page.py:18: AssertionError"}, "attachments": [{"name": "stdout", "source": "c4af774c-ec76-4e7b-9b1e-f44b3db09066-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "promo_offer", "value": "'offer7'"}], "start": 1615644263900, "stop": 1615644267396, "uuid": "50b63ed9-788c-492b-b718-a5f9c4f05a2e", "historyId": "8433857a769ecd2ca3eba03399b040cb", "testCaseId": "0dfdfd1797a0034073e745572a047fc5", "fullName": "module_5.test_product_page.TestProductPage#test_guest_can_add_product_to_basket", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "parentSuite", "value": "module_5"}, {"name": "suite", "value": "test_product_page"}, {"name": "subSuite", "value": "TestProductPage"}, {"name": "host", "value": "DESKTOP-Q95UMC6"}, {"name": "thread", "value": "17572-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "module_5.test_product_page"}]}